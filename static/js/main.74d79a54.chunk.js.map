{"version":3,"sources":["Home.js","taxulator.js","App.js","reportWebVitals.js","index.js"],"names":["Home","onSearchChange","event","props","target","value","onButtonClicked","onRouteChange","state","className","htmlFor","type","onChange","this","name","id","onClick","React","Component","taxulator","i","j","k","percent","taxer","App","route","setState","searchField","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAiFeA,E,kDAzEb,aAAe,IAAD,8BACZ,gBAMFC,eAAiB,SAACC,GAChB,EAAKC,MAAMF,eAAeC,EAAME,OAAOC,QAR3B,EAWdC,gBAAkB,WAEhB,EAAKH,MAAMI,cAAc,QAXzB,EAAKC,MAAQ,GAFD,E,0CAmBd,WAAU,IAAD,OAGP,OAIE,8BACE,uBAAMC,UAAU,iBAAhB,UAGE,sBAAKA,UAAU,MAAf,UACE,uBAAOA,UAAU,sCAAsCC,QAAQ,YAA/D,2BACE,uBACAC,KAAO,SACPC,SAAYC,KAAKZ,eACjBQ,UAAU,0CACVK,KAAK,SACLC,GAAG,cAEP,uBAKA,qBAAKN,UAAY,SAAjB,SACE,uBACEA,UAAU,8EACVE,KAAK,SACLN,MAAM,SACNW,QAAW,kBAAM,EAAKV,gC,GAnDjBW,IAAMC,WCyCVC,EA5CG,SAAC,GAAe,IAAdC,EAAa,EAAbA,EAAGC,EAAU,EAAVA,EAAU,EAAPC,EAoCzB,OACC,8BACU,oBAAGb,UAAY,iBAAf,gCApCM,SAACW,EAAGC,EAAGC,GACjB,IAAIC,EAAU,EA4BpB,OA3BIH,GAAK,GAAKA,GAAKC,EAClBE,EAAUH,EAAS,GAAJA,EAGLA,GAAMC,EAAI,GAAMD,GAAK,MAC/BG,EAAe,IAAJH,EAGDA,GAAK,OAASA,GAAK,MAC7BG,EAAe,IAAJH,EAGDA,GAAK,OAASA,GAAK,MAC7BG,EAAgB,IAAJH,EAGFA,GAAK,QAAUA,GAAK,OAC9BG,EAAe,IAAJH,EAGDA,GAAK,QAAUA,GAAK,OAC9BG,EAAe,IAAJH,EAEDA,GAAK,SACfG,EAAe,IAAJH,GAGLG,EAOuDC,CAAMJ,EAAGC,SCQ1DI,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAQFlB,cAAgB,SAACmB,GACf,EAAKC,SAAS,CAACD,MAAOA,KAVV,EAadzB,eAAiB,SAACC,GAClB,EAAKyB,SAAS,CAACC,YAAa1B,KAZ1B,EAAKM,MAAQ,CACXkB,MAAO,MACPE,YAAa,GAJH,E,0CAqBd,WAGE,OACI,8BAC0B,QAArBf,KAAKL,MAAMkB,MACX,cAAC,EAAD,CAAMnB,cAAiBM,KAAKN,cAAeN,eAAkBY,KAAKZ,iBAClE,cAAC,EAAD,CAAWmB,EAAKP,KAAKL,MAAMoB,YAAaP,EAAK,KAAMC,EAAK,e,GA9BnDL,IAAMC,WCQTW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.74d79a54.chunk.js","sourcesContent":["\r\n\r\n\r\nimport React from 'react';\r\nimport './App.css';\r\n\r\nclass Home extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n    }\r\n\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.props.onSearchChange(event.target.value)\r\n  }\r\n\r\n  onButtonClicked = () => {\r\n\r\n    this.props.onRouteChange('tax')\r\n    \r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    \r\n\r\n    return (\r\n      \r\n\r\n\r\n      <div>\r\n        <form className=\"measure center\">\r\n\r\n\r\n          <div className=\"mt3\">\r\n            <label className=\"db fw6 lh-copy f6 tc f4 fw6 ph0 mh0\" htmlFor=\"user-name\">Yearly Income</label>\r\n              <input \r\n              type = \"number\"\r\n              onChange = {this.onSearchChange}\r\n              className=\"pa2 input-reset ba bg-transparent w-100\" \r\n              name=\"income\"  \r\n              id=\"income\"/>\r\n          </div>\r\n          <br></br>\r\n\r\n\r\n\r\n\r\n          <div className = \"center\">\r\n            <input \r\n              className=\"center b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n              type=\"submit\" \r\n              value=\"submit\"\r\n              onClick = {() => this.onButtonClicked()}/>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      \r\n        \r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\n\r\nconst taxulator = ({i, j, k}) => {\r\n\t\r\n    const taxer = (i, j, k) => {\r\n        var percent = 0.0;\r\n\t\tif (i >= 0 && i <= j) {\r\n\t\t\tpercent = i - (i * 0.10);\r\n\t\t\t \r\n\r\n\t\t} else if (i >= (j + 1) && i <= 40125) {\r\n\t\t\tpercent = (i * 0.12);\r\n\t\t\t \r\n\r\n\t\t} else if (i >= 40125 && i <= 85525) {\r\n\t\t\tpercent = (i * 0.22);\r\n\t\t\t \r\n\r\n\t\t} else if (i >= 85526 && i <= 163000) {\r\n\t\t\tpercent =  (i * 0.24);\r\n\t\t\t \r\n\r\n\t\t} else if (i >= 163001 && i <= 207350) {\r\n\t\t\tpercent = (i * 0.32);\r\n\t\t\t \r\n\r\n\t\t} else if (i >= 207351 && i <= 518400) {\r\n\t\t\tpercent = (i * 0.35);\r\n\t\t\t \r\n\t\t} else if (i >= 518401) {\r\n\t\t\tpercent = (i * 0.37);\r\n\t\t\t \r\n\t\t}\r\n\t\treturn percent;\r\n    }\r\n\r\n\r\n\r\n\treturn(\r\n\t\t<div>\r\n            <p className = \"measure center\">your taxes are... ${taxer(i, j, k)}</p>\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default taxulator;","import React from 'react';\nimport Home from './Home'\nimport Taxulator from './taxulator'\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      route: 'app',\n      searchField: 0\n    }\n\n  }\n\n  onRouteChange = (route) => {\n    this.setState({route: route});\n  }\n\n  onSearchChange = (event) => {\n\t\tthis.setState({searchField: event});\n\t}\n\n  \n\n\n\n  render() {\n    \n\n    return (\n        <div>\n            {this.state.route === 'app'\n            ?<Home onRouteChange = {this.onRouteChange} onSearchChange = {this.onSearchChange} />\n            :<Taxulator i = {this.state.searchField} j = {9875} k = {518401} />\n            \n            }\n\n\n        </div>\n      \n\n\n    )\n  }\n\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}